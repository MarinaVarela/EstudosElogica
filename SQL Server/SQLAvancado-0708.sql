SELECT MEDIA_EMBALAGEM.EMBALAGEM, MEDIA_EMBALAGEM.PRECO_MEDIO
FROM 
	(SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) PRECO_MEDIO
	FROM TABELA_DE_PRODUTOS
	GROUP BY EMBALAGEM) MEDIA_EMBALAGEM
	WHERE MEDIA_EMBALAGEM.PRECO_MEDIO <= 10

CREATE VIEW MEDIA_EMBALAGEM AS 
SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) PRECO_MEDIO
	FROM TABELA_DE_PRODUTOS
	GROUP BY EMBALAGEM


	-- FUNÇÕES
SELECT NOME, LOWER(NOME) AS NOME_MINUSCULO
FROM TABELA_DE_CLIENTES

SELECT NOME, UPPER(NOME) AS NOME_MINUSCULO
FROM TABELA_DE_CLIENTES

SELECT NOME, LOWER(CONCAT (ENDERECO_1, ' '+ BAIRRO, ' ', CIDADE, ' ', ESTADO, ' - ', CEP)) AS ENDEREÇO_COMPLETO
FROM TABELA_DE_CLIENTES

SELECT NOME_DO_PRODUTO, LEFT (NOME_DO_PRODUTO, 3) AS TRES_CHAR
FROM TABELA_DE_PRODUTOS

SELECT TAMANHO, REPLACE(REPLACE (TAMANHO, 'Litros', 'L'), 'Litro', 'L') as TAMANHO_MODIFICADO
FROM TABELA_DE_PRODUTOS

-- desafiO
SELECT NOME, SUBSTRING(NOME, 1,CHARINDEX(' ', NOME, 1))
FROM TABELA_DE_CLIENTES

-- FUNÇÃO DATAS

SELECT GETDATE()

SELECT DATEADD(DAY, 10, GETDATE()) AS [DATA+10]
SELECT DATEADD(DAY, -48, GETDATE()) AS [DATA-48]

SELECT DATEDIFF(DAY, '2023-01-01', GETDATE()) AS DIAS_PERCORRIDOS_ANO
SELECT DATEDIFF(HOUR, '2023-01-01', GETDATE()) AS HORAS_PERCORRIDOS_ANO
SELECT DATEDIFF(WEEK, '2023-01-01', GETDATE()) AS SEMANA_PERCORRIDOS_ANO

SELECT DATEPART(DAY, GETDATE()) AS DIA_DE_HOJE

SELECT ISDATE(DATETIMEFROMPARTS(2023,02,28,00,00,00,00))
	
-- DESAFIO
SELECT CONCAT(upper(NOME), ', nasceu na data ', DATENAME(DAY, DATA_DE_NASCIMENTO), ' (', DATENAME(WEEKDAY, DATA_DE_NASCIMENTO), ') de ', DATENAME(MONTH, DATA_DE_NASCIMENTO), ' de ', DATENAME(YEAR, DATA_DE_NASCIMENTO)) as nome_dianascimento
FROM TABELA_DE_CLIENTES

-- FUNÇÕES NUMERICAS
SELECT ROUND(3.450, 2)
SELECT CEILING (3.433)
SELECT FLOOR (3.433)
SELECT POWER (120,2)
SELECT EXP (3)
SELECT SQRT (300)
SELECT ABS (10)
SELECT ABS (-10)

SELECT * FROM NOTAS_FISCAIS


-- DESAFIO MATH
SELECT YEAR(DATA_VENDA) AS ANO, FLOOR((SUM(QUANTIDADE * PREÇO * IMPOSTO))) VALOR_IMPOSTO_POR_ANO
FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF 
		ON NF.NUMERO = INF.NUMERO
GROUP BY YEAR(DATA_VENDA)
ORDER BY YEAR(DATA_VENDA)

-- CONVERSÃO 
SELECT DATA_DE_NASCIMENTO, CONVERT(VARCHAR(10), DATA_DE_NASCIMENTO, 106)
FROM TABELA_DE_CLIENTES

SELECT DATA_DE_NASCIMENTO, CONVERT(VARCHAR(10), DATA_DE_NASCIMENTO, 106)
FROM TABELA_DE_CLIENTES

SELECT NOME_DO_PRODUTO, 'O PREÇO DE LISTA É ' + CAST(PRECO_DE_LISTA AS VARCHAR(10)) 
FROM TABELA_DE_PRODUTOS 

-- DESAFIO 
--ver foto grupo

-- PRATICANDO
SELECT NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) MES_ANO, SUM(INF.QUANTIDADE) QUANTIDADE_TOTAL
FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON NF.NUMERO = INF.NUMERO
GROUP BY NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120)

SELECT TC.CPF, TC.NOME, TC.VOLUME_DE_COMPRA, TOTAL_VENDA.MES_ANO, TOTAL_VENDA.QUANTIDADE_TOTAL
FROM TABELA_DE_CLIENTES TC
	INNER JOIN (SELECT NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) MES_ANO, SUM(INF.QUANTIDADE) QUANTIDADE_TOTAL
		FROM NOTAS_FISCAIS NF
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON NF.NUMERO = INF.NUMERO
		GROUP BY NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120)) TOTAL_VENDA
	ON TOTAL_VENDA.CPF = TC.CPF

SELECT TC.CPF, TC.NOME, TOTAL_VENDA.MES_ANO, TC.VOLUME_DE_COMPRA, TOTAL_VENDA.QUANTIDADE_TOTAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TOTAL_VENDA.QUANTIDADE_TOTAL THEN 'VÁLIDAS'
ELSE 'INVÁLIDAS' END) RESULTADO
FROM TABELA_DE_CLIENTES TC
	INNER JOIN (SELECT NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) MES_ANO, SUM(INF.QUANTIDADE) QUANTIDADE_TOTAL
		FROM NOTAS_FISCAIS NF
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON NF.NUMERO = INF.NUMERO
		GROUP BY NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120)) TOTAL_VENDA
	ON TOTAL_VENDA.CPF = TC.CPF
WHERE TOTAL_VENDA.MES_ANO = '2015-01'

-- DESAFIO1

SELECT TC.CPF, TC.NOME, TOTAL_VENDA.MES_ANO, TC.VOLUME_DE_COMPRA, TOTAL_VENDA.QUANTIDADE_TOTAL,
ROUND((1 - (VOLUME_DE_COMPRA/QUANTIDADE_TOTAL))*100,2) DIFERENÇA_PERCENTUAL,
(CASE WHEN TC.VOLUME_DE_COMPRA >= TOTAL_VENDA.QUANTIDADE_TOTAL THEN 'VÁLIDAS'
ELSE 'INVÁLIDAS' END) RESULTADO
FROM TABELA_DE_CLIENTES TC
	INNER JOIN (SELECT NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120) MES_ANO, SUM(INF.QUANTIDADE) QUANTIDADE_TOTAL
		FROM NOTAS_FISCAIS NF
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON NF.NUMERO = INF.NUMERO
		GROUP BY NF.CPF, CONVERT(VARCHAR(7), NF.DATA_VENDA, 120)) TOTAL_VENDA
	ON TOTAL_VENDA.CPF = TC.CPF
WHERE TOTAL_VENDA.MES_ANO = '2015-01' AND (CASE WHEN TC.VOLUME_DE_COMPRA >= TOTAL_VENDA.QUANTIDADE_TOTAL THEN 'VÁLIDAS'
ELSE 'INVÁLIDAS' END) = 'INVÁLIDAS'

-- PRATICANDO 2

SELECT TP.SABOR, YEAR(NF.DATA_VENDA) ANO, SUM(INF.QUANTIDADE) VENDA_ANO
FROM TABELA_DE_PRODUTOS TP
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
	INNER JOIN NOTAS_FISCAIS NF
	ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2015
GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)
ORDER BY SUM(INF.QUANTIDADE) DESC

SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
FROM NOTAS_FISCAIS NF
	INNER JOIN ITENS_NOTAS_FISCAIS INF
	ON NF.NUMERO = INF.NUMERO
WHERE YEAR(NF.DATA_VENDA) = 2015
GROUP BY YEAR(NF.DATA_VENDA) 

SELECT VS.SABOR, vs.ANO, VS.VENDA_ANO,
ROUND((CONVERT(FLOAT, VS.VENDA_ANO) / CONVERT(FLOAT, VA.VENDA_TOTAL_ANO)) * 100,2) PERCENTUAL
FROM (SELECT TP.SABOR, YEAR(NF.DATA_VENDA) ANO, SUM(INF.QUANTIDADE) VENDA_ANO
		FROM TABELA_DE_PRODUTOS TP
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
			INNER JOIN NOTAS_FISCAIS NF
			ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(NF.DATA_VENDA) = 2015
		GROUP BY TP.SABOR, YEAR(NF.DATA_VENDA)) VS
	INNER JOIN (SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
		FROM NOTAS_FISCAIS NF
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(NF.DATA_VENDA) = 2015
		GROUP BY YEAR(NF.DATA_VENDA)) VA
	ON VA.ANO = VS.ANO
ORDER BY VS.VENDA_ANO DESC

-- DESAFIO 2
SELECT VS.TAMANHO, VS.ANO, VS.VENDA_ANO,
ROUND((CONVERT(FLOAT, VS.VENDA_ANO) / CONVERT(FLOAT, VA.VENDA_TOTAL_ANO)) * 100,2) PERCENTUAL
FROM (SELECT TP.TAMANHO, YEAR(NF.DATA_VENDA) ANO, SUM(INF.QUANTIDADE) VENDA_ANO
		FROM TABELA_DE_PRODUTOS TP
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON INF.CODIGO_DO_PRODUTO = TP.CODIGO_DO_PRODUTO
			INNER JOIN NOTAS_FISCAIS NF
			ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(NF.DATA_VENDA) = 2016
		GROUP BY TP.TAMANHO, YEAR(NF.DATA_VENDA)) VS
	INNER JOIN (SELECT YEAR(NF.DATA_VENDA) AS ANO, SUM(INF.QUANTIDADE) AS VENDA_TOTAL_ANO
		FROM NOTAS_FISCAIS NF
			INNER JOIN ITENS_NOTAS_FISCAIS INF
			ON NF.NUMERO = INF.NUMERO
		WHERE YEAR(NF.DATA_VENDA) = 2016
		GROUP BY YEAR(NF.DATA_VENDA)) VA
	ON VA.ANO = VS.ANO
ORDER BY VS.TAMANHO DESC




