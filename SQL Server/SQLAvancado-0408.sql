SELECT * FROM TABELA_DE_VENDEDORES 
SELECT * FROM NOTAS_FISCAIS

SELECT MATRICULA, COUNT (*) AS NUM_NOTAS FROM NOTAS_FISCAIS GROUP BY MATRICULA
-- PRECISO VER NO RELATÓRIO O NOME DO VENDEDOR, POR ISSO INNER JOIN COM O A TABELA DE VENDEDORES E NOTAS FISCAIS

SELECT NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME, COUNT (*) AS NUM_NOTAS 
FROM NOTAS_FISCAIS 
INNER JOIN TABELA_DE_VENDEDORES 
ON TABELA_DE_VENDEDORES.MATRICULA = NOTAS_FISCAIS.MATRICULA
GROUP BY NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME

SELECT NF.MATRICULA, TV.NOME, COUNT (*) NUM_NOTAS 
FROM TABELA_DE_VENDEDORES TV  -- NORMALMENTE NA BOA PRATICA A TABELA SUPERIOR FICA ESCRIT ANO FROM, OU SEJA NESSE CASO A MATRICULA TEM SUPERIORIDADE NA VENDEDORES
INNER JOIN NOTAS_FISCAIS NF
ON TV.MATRICULA = NF.MATRICULA
GROUP BY NF.MATRICULA, TV.NOME

-- DESAFIO
SELECT INF.CODIGO_DO_PRODUTO, TB.NOME_DO_PRODUTO, SUM(QUANTIDADE) VENDAS_TOTAIS 
FROM TABELA_DE_PRODUTOS TB 
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON INF.CODIGO_DO_PRODUTO = TB.CODIGO_DO_PRODUTO
GROUP BY INF.CODIGO_DO_PRODUTO, TB.NOME_DO_PRODUTO
HAVING SUM(QUANTIDADE) > 394000 
ORDER BY VENDAS_TOTAIS DESC;

-- LEFT JOIN
SELECT DISTINCT TC.NOME NOME_DO_CLIENTE, NF.CPF CPF_DA_NF, TC.CPF CPF_DO_CADASTRO 
FROM TABELA_DE_CLIENTES TC 
INNER JOIN NOTAS_FISCAIS NF 
ON TC.CPF = NF.CPF

SELECT COUNT (*)
FROM TABELA_DE_CLIENTES TC 

INSERT INTO TABELA_DE_CLIENTES (CPF, NOME, ENDERECO_1, ENDERECO_2, BAIRRO, CIDADE, ESTADO, CEP, DATA_DE_NASCIMENTO, 
IDADE, GENERO, LIMITE_DE_CREDITO, VOLUME_DE_COMPRA,	PRIMEIRA_COMPRA) VALUES 
('23413632331', 'JULIANA SILVA', 'RUA TRAMANDAI', '', 'BANGU', 'RIO DE JANEIRO', 'RJ', '23400000', '1989-02-04', 33, 'F', 180000, 24500, 0)

SELECT DISTINCT TC.NOME NOME_DO_CLIENTE, NF.CPF CPF_DA_NF, TC.CPF CPF_DO_CADASTRO 
FROM TABELA_DE_CLIENTES TC 
LEFT JOIN NOTAS_FISCAIS NF 
ON TC.CPF = NF.CPF

SELECT DISTINCT TC.NOME NOME_DO_CLIENTE, NF.CPF CPF_DA_NF, TC.CPF CPF_DO_CADASTRO 
FROM TABELA_DE_CLIENTES TC 
LEFT JOIN NOTAS_FISCAIS NF 
ON TC.CPF = NF.CPF
WHERE NF.CPF IS NULL

-- CLIENTES SEM VENDEDORES
SELECT DISTINCT TV.NOME [NOME VENDEDOR], TV.BAIRRO [BAIRRO VENDEDOR], TC.NOME [NOME CLIENTE], TC.BAIRRO [BAIRRO CLIENTE]
FROM TABELA_DE_CLIENTES TC
LEFT JOIN TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO
WHERE TV.NOME IS NULL

-- VENDEDORES SEM CLIENTES
SELECT DISTINCT TV.NOME [NOME VENDEDOR], TV.BAIRRO [BAIRRO VENDEDOR], TC.NOME [NOME CLIENTE], TC.BAIRRO [BAIRRO CLIENTE]
FROM TABELA_DE_CLIENTES TC
RIGHT JOIN TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO
WHERE TC.NOME IS NULL

-- PARA VER TUDO, FULL JOIN
SELECT DISTINCT TV.NOME [NOME VENDEDOR], TV.BAIRRO [BAIRRO VENDEDOR], TC.NOME [NOME CLIENTE], TC.BAIRRO [BAIRRO CLIENTE]
FROM TABELA_DE_CLIENTES TC
FULL JOIN TABELA_DE_VENDEDORES TV
ON TC.BAIRRO = TV.BAIRRO

-- UNION

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
-- 12 BAIRROS > CLIENTES 

SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES
-- 4 BAIRROS > VENDEDORES

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES
--  13 PELO BAIRRO QUE TEM VENDEDOR SEM CLIENTE

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
UNION ALL
SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES
--  12 + 4 = 16 BAIRROS

-- sub queries 

SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES
-- +
SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN ('COPACABANA', 'JARDINS', 'SANTO AMARO', 'TIJUCA')

-- = 

SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN (SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES)

-- DESAFIO
SELECT DISTINCT SABOR 
FROM TABELA_DE_PRODUTOS 
WHERE CODIGO_DO_PRODUTO IN 
	(SELECT INF.CODIGO_DO_PRODUTO
		FROM TABELA_DE_PRODUTOS TB
			INNER JOIN ITENS_NOTAS_FISCAIS INF
		ON INF.CODIGO_DO_PRODUTO = TB.CODIGO_DO_PRODUTO
		GROUP BY INF.CODIGO_DO_PRODUTO
			HAVING SUM(QUANTIDADE) > 394000)


			-- SUBISTITUINDO O HAVING POR SUB QUERY
SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) PRECO_MEDIO
FROM TABELA_DE_PRODUTOS
GROUP BY EMBALAGEM
	HAVING AVG(PRECO_DE_LISTA) <= 10
-- =
SELECT MEDIA_EMBALAGEM.EMBALAGEM, MEDIA_EMBALAGEM.PRECO_MEDIO
FROM 
	(SELECT EMBALAGEM, AVG(PRECO_DE_LISTA) PRECO_MEDIO
	FROM TABELA_DE_PRODUTOS
	GROUP BY EMBALAGEM) MEDIA_EMBALAGEM
	WHERE MEDIA_EMBALAGEM.PRECO_MEDIO <= 10





